-------------------------------- GROUP BY -------------------------------- 

● (1) Conta gli ospiti raggruppandoli per anno di nascita

SELECT COUNT(id) AS 'numero ospiti', YEAR(`date_of_birth`) AS 'anno di nascita'
FROM `ospiti`
GROUP BY YEAR(`date_of_birth`)
ORDER BY COUNT(id);



● (2) Somma i prezzi dei pagamenti raggruppandoli per status

SELECT SUM(`price`) AS 'importo totale', `status` AS 'stato dei pagamenti'
FROM `pagamenti`
GROUP BY `status`
ORDER BY SUM(`price`);



● (3) Conta quante volte è stata prenotata ogni stanza

SELECT COUNT(`stanza_id`) AS 'numero prenotazioni', `stanza_id` AS 'numero stanza'
FROM `prenotazioni`
GROUP BY `stanza_id`
ORDER BY COUNT(`stanza_id`);



● (4) Fai una analisi per vedere se ci sono ore in cui le prenotazioni sono più frequenti


----- OPTION 1 -----

SELECT COUNT(`created_at`) AS 'numero prenotazioni', HOUR(`created_at`) AS 'orario prenotazione'
FROM `prenotazioni`
GROUP BY HOUR(`created_at`)
ORDER BY COUNT(`created_at`) DESC;


----- OPTION 2 -----

SELECT COUNT(`created_at`) AS 'numero prenotazioni', EXTRACT(HOUR FROM `created_at`) AS 'orario prenotazione'
FROM `prenotazioni`
GROUP BY EXTRACT(HOUR FROM `created_at`)
ORDER BY COUNT(`created_at`) DESC;



● (5) Quante prenotazioni ha fatto l’ospite che ha fatto più prenotazioni?

SELECT COUNT(`ospite_id`) AS 'numero prenotazioni', `ospite_id` AS 'identificativo ospite'
FROM `prenotazioni_has_ospiti`
GROUP BY `ospite_id`
ORDER BY COUNT(`ospite_id`) DESC
LIMIT 2;



-------------------------------- JOIN -------------------------------- 

● (1) Come si chiamano gli ospiti che hanno fatto più di due prenotazioni?

SELECT ospiti.name AS 'nome', ospiti.lastname AS 'cognome', COUNT(*) AS numero_prenotazioni
FROM `ospiti`
INNER JOIN `prenotazioni_has_ospiti`
ON ospiti.id = prenotazioni_has_ospiti.ospite_id
GROUP BY ospiti.name, ospiti.lastname
HAVING numero_prenotazioni > 2
ORDER BY numero_prenotazioni DESC;



● (2) Stampare tutti gli ospiti per ogni prenotazione

SELECT ospiti.name AS 'nome', ospiti.lastname AS 'cognome', prenotazioni_has_ospiti.prenotazione_id AS 'numero prenotazione'
FROM `ospiti`
INNER JOIN `prenotazioni_has_ospiti`
ON ospiti.id = prenotazioni_has_ospiti.ospite_id;



● (3) Stampare Nome, Cognome, Prezzo e Pagante per tutte le prenotazioni fatte a Maggio 2018

SELECT ospiti.name AS 'nome ospite', ospiti.lastname AS 'cognome ospite', pagamenti.price AS 'prezzo', paganti.name AS 'nome pagante', paganti.lastname AS 'cognome pagante', prenotazioni_has_ospiti.prenotazione_id AS 'numero prenotazione'
FROM `ospiti`
INNER JOIN `prenotazioni_has_ospiti`
ON ospiti.id = prenotazioni_has_ospiti.ospite_id
INNER JOIN `pagamenti`
ON prenotazioni_has_ospiti.prenotazione_id = pagamenti.prenotazione_id
INNER JOIN `paganti`
ON pagamenti.pagante_id = paganti.id
INNER JOIN `prenotazioni`
ON 
WHERE MONTH(prenotazioni.created_at) = 05;

EXTRACT(month FROM `created_at`)


● (4) Fai la somma di tutti i prezzi delle prenotazioni per le stanze del primo piano

SELECT SUM(pagamenti.price) AS 'totale prezzi prenotazioni stanze primo piano'
FROM `pagamenti`
INNER JOIN `prenotazioni`
ON pagamenti.prenotazione_id = prenotazioni.id
INNER JOIN `stanze`
ON prenotazioni.stanza_id = stanze.id
WHERE stanze.floor = 1
AND pagamenti.status = 'accepted';



● (5) Prendi i dati di fatturazione per la prenotazione con id=7


● (6) Le stanze sono state tutte prenotate almeno una volta?
// Visualizzare le stanze non ancora prenotate