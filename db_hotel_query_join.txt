-------------------------------- GROUP BY -------------------------------- 

● (1) Conta gli ospiti raggruppandoli per anno di nascita

SELECT COUNT(id) AS 'numero_ospiti', YEAR(`date_of_birth`) AS 'anno_di_nascita'
FROM `ospiti`
GROUP BY anno_di_nascita
ORDER BY numero_ospiti;



● (2) Somma i prezzi dei pagamenti raggruppandoli per status

SELECT SUM(`price`) AS 'importo_totale', `status` AS 'stato_pagamenti'
FROM `pagamenti`
GROUP BY `status`
ORDER BY importo_totale;



● (3) Conta quante volte è stata prenotata ogni stanza

SELECT COUNT(`stanza_id`) AS 'numero_prenotazioni', `stanza_id` AS 'numero_stanza'
FROM `prenotazioni`
GROUP BY `stanza_id`
ORDER BY numero_prenotazioni;



● (4) Fai una analisi per vedere se ci sono ore in cui le prenotazioni sono più frequenti


----- OPTION 1 -----

SELECT COUNT(`created_at`) AS 'numero_prenotazioni', HOUR(`created_at`) AS 'orario_prenotazioni'
FROM `prenotazioni`
GROUP BY orario_prenotazioni
ORDER BY numero_prenotazioni DESC;


----- OPTION 2 -----

SELECT COUNT(`created_at`) AS 'numero_prenotazioni', EXTRACT(HOUR FROM `created_at`) AS 'i'
FROM `prenotazioni`
GROUP BY orario_prenotazione
ORDER BY numero_prenotazioni DESC;



● (5) Quante prenotazioni ha fatto l’ospite che ha fatto più prenotazioni?
// Mi interessa sapere QUALE è il NUMERO massimo delle prenotazioni (3) e NON chi le ha fatte, quindi basta mettere LIMITE 1 perché mi basta il primo risultato (se ci sono parimerito non mi interessa)

SELECT COUNT(`ospite_id`) AS 'numero_prenotazioni', `ospite_id` AS 'identificativo_ospite'
FROM `prenotazioni_has_ospiti`
GROUP BY `ospite_id`
ORDER BY numero_prenotazioni DESC
LIMIT 1;



-------------------------------- JOIN -------------------------------- 

● (1) Come si chiamano gli ospiti che hanno fatto più di due prenotazioni?

SELECT ospiti.name AS 'nome', ospiti.lastname AS 'cognome', COUNT(*) AS numero_prenotazioni
FROM `ospiti`
INNER JOIN `prenotazioni_has_ospiti`
ON ospiti.id = prenotazioni_has_ospiti.ospite_id
GROUP BY ospiti.name, ospiti.lastname
HAVING numero_prenotazioni > 2
ORDER BY numero_prenotazioni DESC;



● (2) Stampare tutti gli ospiti per ogni prenotazione

SELECT ospiti.name AS 'nome', ospiti.lastname AS 'cognome', prenotazioni_has_ospiti.prenotazione_id AS 'identificativo_prenotazione'
FROM `ospiti`
INNER JOIN `prenotazioni_has_ospiti`
ON ospiti.id = prenotazioni_has_ospiti.ospite_id
ORDER BY identificativo_prenotazione;



● (3) Stampare Nome, Cognome, Prezzo e Pagante per tutte le prenotazioni fatte a Maggio 2018

----- OPTION 1A -----

SELECT ospiti.name AS 'nome_ospite', ospiti.lastname AS 'cognome_ospite', pagamenti.price AS 'prezzo', paganti.name AS 'nome_pagante', paganti.lastname AS 'cognome_pagante' 
FROM `paganti`
INNER JOIN `pagamenti`
ON paganti.id = pagamenti.pagante_id
INNER JOIN `prenotazioni`
ON pagamenti.prenotazione_id = prenotazioni.id
INNER JOIN `prenotazioni_has_ospiti`
ON prenotazioni.id = prenotazioni_has_ospiti.prenotazione_id
INNER JOIN `ospiti`
ON prenotazioni_has_ospiti.ospite_id = ospiti.id
WHERE MONTH(prenotazioni.created_at) = 05
AND YEAR(prenotazioni.created_at) = 2018;


----- OPTION 1B -----

SELECT ospiti.name AS 'nome_ospite', ospiti.lastname AS 'cognome_ospite', pagamenti.price AS 'prezzo', paganti.name AS 'nome_pagante', paganti.lastname AS 'cognome_pagante' 
FROM `paganti`
INNER JOIN `pagamenti`
ON paganti.id = pagamenti.pagante_id
INNER JOIN `prenotazioni`
ON pagamenti.prenotazione_id = prenotazioni.id
INNER JOIN `prenotazioni_has_ospiti`
ON prenotazioni.id = prenotazioni_has_ospiti.prenotazione_id
INNER JOIN `ospiti`
ON prenotazioni_has_ospiti.ospite_id = ospiti.id
WHERE EXTRACT(MONTH FROM prenotazioni.created_at) = 05
AND EXTRACT(YEAR FROM prenotazioni.created_at) = 2018;


----- OPTION 2 -----

SELECT ospiti.name AS 'nome_ospite', ospiti.lastname AS 'cognome_ospite', pagamenti.price AS 'prezzo', paganti.name AS 'nome_pagante', paganti.lastname AS 'cognome_pagante' 
FROM `paganti`
INNER JOIN `pagamenti`
ON paganti.id = pagamenti.pagante_id
INNER JOIN `prenotazioni`
ON pagamenti.prenotazione_id = prenotazioni.id
INNER JOIN `prenotazioni_has_ospiti`
ON prenotazioni.id = prenotazioni_has_ospiti.prenotazione_id
INNER JOIN `ospiti`
ON prenotazioni_has_ospiti.ospite_id = ospiti.id
WHERE prenotazioni.created_at BETWEEN '2018-05-01' AND '2018-05-31';


----- OPTION 3 -----
// EXTRACT(YEAR_MONTH) restituisce solo numeri senza dividerli con i trattini

SELECT ospiti.name AS 'nome_ospite', ospiti.lastname AS 'cognome_ospite', pagamenti.price AS 'prezzo', paganti.name AS 'nome_pagante', paganti.lastname AS 'cognome_pagante' 
FROM `paganti`
INNER JOIN `pagamenti`
ON paganti.id = pagamenti.pagante_id
INNER JOIN `prenotazioni`
ON pagamenti.prenotazione_id = prenotazioni.id
INNER JOIN `prenotazioni_has_ospiti`
ON prenotazioni.id = prenotazioni_has_ospiti.prenotazione_id
INNER JOIN `ospiti`
ON prenotazioni_has_ospiti.ospite_id = ospiti.id
WHERE EXTRACT(YEAR_MONTH FROM prenotazioni.created_at) = 201805;



● (4) Fai la somma di tutti i prezzi delle prenotazioni per le stanze del primo piano

SELECT SUM(pagamenti.price) AS 'totale_prezzi_primo_piano'
FROM `pagamenti`
INNER JOIN `prenotazioni`
ON pagamenti.prenotazione_id = prenotazioni.id
INNER JOIN `stanze`
ON prenotazioni.stanza_id = stanze.id
WHERE stanze.floor = 1
AND pagamenti.status = 'accepted';



● (5) Prendi i dati di fatturazione per la prenotazione con id=7

SELECT paganti.name AS 'nome pagante', paganti.lastname AS 'cognome pagante', paganti.address AS 'indirizzo fatturazione', pagamenti.price AS 'importo', paganti.created_at AS 'data pagamento'
FROM `prenotazioni`
INNER JOIN `pagamenti`
ON prenotazioni.id = pagamenti.prenotazione_id
INNER JOIN `paganti`
ON pagamenti.pagante_id = paganti.id
WHERE prenotazioni.id = 7;



● (6) Le stanze sono state tutte prenotate almeno una volta?
// Visualizzare le stanze non ancora prenotate


----- OPTION 1 -----

SELECT stanze.id AS 'identificativo_camera', stanze.room_number AS 'numero_camera', prenotazioni.id 'numero_prenotazioni'
FROM `stanze`
LEFT JOIN `prenotazioni`
ON prenotazioni.stanza_id = stanze.id
WHERE prenotazioni.stanza_id IS NULL;


----- OPTION 2 -----

SELECT stanze.id AS 'identificativo_camera', stanze.room_number AS 'numero_camera', prenotazioni.id 'numero_prenotazioni'
FROM `prenotazioni`
RIGHT JOIN `stanze`
ON prenotazioni.stanza_id = stanze.id
WHERE prenotazioni.stanza_id IS NULL;